plugins {
    id 'java'
    id 'checkstyle'
    id 'jacoco'
    id 'com.github.spotbugs' version "6.0.0-beta.3"
    id "org.owasp.dependencycheck" version "8.4.0"
}

group = 'per.duyd.training'
version = '1.0-SNAPSHOT'

repositories {
    mavenCentral()
    flatDir {
        dirs 'libs' // For local JARs in a 'libs' directory
    }
}

java {
    sourceCompatibility = '21'
    targetCompatibility = '21'
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}


configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

checkstyle {
    toolVersion = '10.12.3'
}

jacoco {
    toolVersion = "0.8.9"
}

spotbugs {
    toolVersion = '4.7.3'
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar']) // For local JARs

    testImplementation 'org.junit.jupiter:junit-jupiter:5.10.0'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher:1.10.0'
}

test {
    useJUnitPlatform()
}

build {
    finalizedBy(jacocoTestReport)
}

def excludeCoverage = [
        "per/duyd/training/dsaa/collinearpoints/LineSegment**",
        "per/duyd/training/dsaa/collinearpoints/Point**",
        "per/duyd/training/dsaa/boggle/BoggleBoard**"
]

jacocoTestReport {
    afterEvaluate {
        classDirectories.setFrom(files(classDirectories.files.collect {
            fileTree(dir: it, exclude: excludeCoverage)
        }))
    }

//    finalizedBy(jacocoTestCoverageVerification)
}

jacocoTestCoverageVerification {
    afterEvaluate {
        classDirectories.setFrom(files(classDirectories.files.collect {
            fileTree(dir: it, exclude: excludeCoverage)
        }))
    }

    violationRules {
        rule {
            limit {
                counter = "INSTRUCTION"
                value = "COVEREDRATIO"
                minimum = 0.95
            }
        }
        rule {
            limit {
                counter = "BRANCH"
                value = "COVEREDRATIO"
                minimum = 0.95
            }
        }
    }
}

spotbugs {
    excludeFilter = file("$projectDir/config/spotbugs/excludeFilter.xml")
    spotbugsTest {
        enabled = false
    }
    spotbugsMain {
        reports {
            html {
                required = true
                outputLocation = file("$buildDir/reports/spotbugs/main/spotbugs.html")
                stylesheet = 'fancy-hist.xsl'
            }
        }
    }
}